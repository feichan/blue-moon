{
  "name": "oss-client",
  "version": "0.0.6",
  "description": "aliyun oss client for node.js",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/coderhaoxin/oss-client.git"
  },
  "keywords": [
    "aliyun",
    "oss",
    "node.js"
  ],
  "author": {
    "name": "haoxin"
  },
  "license": "BSD",
  "readmeFilename": "README.md",
  "dependencies": {
    "xml2js": "~0.2.8",
    "mime": "~1.2.9",
    "request": "~2.22.0"
  },
  "gitHead": "992c59467a64f7ffe0634a49a88876c4429f2a27",
  "directories": {
    "test": "test"
  },
  "devDependencies": {},
  "readme": "### a node.js module to connect aliyun oss\n\n1.用例\n```js\nvar ossApi = require('oss-client');\nvar option = {\n  accessKeyId: 'your access key id',\n  accessKeySecret: 'your access key secret'\n};\n\nvar oss = new ossApi.OssClient(option);\n```\n\n列出所有bucket\n```\nlistBucket(callback(err){})\n```\n\n创建bucket\n```\nbucket: bucket名\nacl:bucket访问规则\ncreateBucket(bucket, acl, callback(err){})\n```\n\n删除bucket\n```\nbucket: bucket名\ndeleteBucket(bucket, callback(err){})\n```\n\n获取bucket访问规则\n```\nbucket: bucket名\ngetBucketAcl(bucket, callback(err, result){})\n```\n\n设置bucket访问规则\n```\nbucket: bucket名\nacl: bucket访问规则\nsetBucketAcl（bucket, acl, callback(err){})\n```\n\n创建object\n```\nbucket: bucket名\nobject: object名\nsrcFile: 上传的文件路径\nuserMetas: 可选，object类型，用户自定义header，如x-oss-meta-location\nputObject(bucket, object, srcFile, /* userMetas, */ callback(err) {})\n```\n\n复制object\n```\nbucket: bucket名\ndstObject: 目标object名\nsrcObject: 源object名\ncopyObject(bucket, dstObject, srcObject, callback(err) {})\n```\n\n删除object\n```\nbucket: bucket名\nobject: object名\ndeleteObject(bucket, object, callback(err) {})\n```\n\n获取object\n```\nbucket: bucket名\nobject: object名\ndstFile: 保存object的文件路径\nuserHeaders: 可选，object类型，用户自定义header，如If-Unmodified-Since\ngetObject(bucket, object, dstFile, /* userHeaders , */ callback(err) {})\n```\n\n获取object头信息\n```\nbucket: bucket名\nobject: object名\nheadObject(bucket, object, callback(err, result) {})\n```\n\n获取object列表\n```\nbucket: bucket名\nprefix: 可选，object 前缀\nmarker: 可选，列表起始object\ndelimiter: 可选，object分组字符，若'/'为则不列出路径深度大于等于二层的object。\nmaxKeys: 可选， 列出的object最大个数\nlistObject(bucket /*, prefix, marker, delimiter, maxKeys */, callback(err, result) {})\n```\n\n创建object group\n```\nbucket: bucket名\nobjectGroup: objectGroup名\nobjectArray: array 类型， 组成object group的object列表\ncreateObjectGroup(bucket, objectGroup, objectArray, callback(err) {})\n```\n\n获取object group\n```\nbucket: bucket名\nobjectGroup: objectGroup名\ndstFile: 保存object group 的文件路径\ngetObjectGroup(bucket, objectGroup, dstFile, callback(err) {})\n```\n\n获取object group index\n```\nbucket: bucket名\nobjectGroup: objectGroup名\ngetObjectGroupIndex(bucket, objectGroup, callback(err, result) {})\n```\n\n获取object group 头信息\n```\nbucket: bucket名\nobjectGroup: objectGroup名\nheadObjectGroup(bucket, objectGroup, callback(err, result) {})\n```\n\n删除object group\n```\nbucket: bucket名\nobjectGroup: objectGroup名\ndeleteObjectGroup(bucket, objectGroup, callback(err) {})\n```\n",
  "_id": "oss-client@0.0.6",
  "_from": "oss-client@*"
}
